temp = list.files(pattern="*.csv")
setwd("D:\Yale important\Other\Data driven yale\Cleaned cities\UHI\UHIfinal")
setwd("D:/Yale important\Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
assign(temp[i], read.csv(temp[i]))
myfiles = lapply(temp, read.delim)
setwd("D:/Yale important\Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
setwd("D:/Yale important\Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
setwd("D:\Yale important\Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
getwd
getwd()
temp = list.files(pattern="*.csv")
temp = list.files(pattern="*.csv")
myfiles = lapply(temp, read.delim)
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)) assign(temp[i], read.csv(temp[i]))
View(casablanca.csv)
for (i in 1:length(temp)){
assign(temp[i], read.csv(temp[i]))
X(temp[i])<-c("UHI")
}
for (i in 1:length(temp)){
assign(temp[i], read.csv(temp[i]))
names(df)<-c("UHI")
}
View(df)
View(df)
View(df)
names(df)<-c("UHI")
names(jakarta.csv)<-c("UHI")
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
assign(temp[i], read.csv(temp[i]))
}
names(jakarta.csv)<-c("UHI")
X <-jakarta.csv[,2]
for (i in 1:length(temp)){
assign(temp[i], read.csv(temp[i]))
X <-temp[i][,2]
}
L <- assign(temp[i], read.csv(temp[i]))
View(L)
X <-L[,2]
View(L)
y=min(X)
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+MinUHI
}
View(Input_f)
View(Input_f)
UHIEQ=UHICol+(-MinUHI)
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
MinUHIEQ=min(UHIEQ)
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
MinUHIEQ=min(UHIEQ)
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
MinUHIEQ=min(UHIEQ)
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
MinUHIEQ=min(UHIEQ)
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
MinUHIEQ=min(UHIEQ)
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
MinUHIEQ=min(UHIEQ)
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
MinUHIEQ=min(UHIEQ)
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
MinUHIEQ=min(UHIEQ)
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
MinUHIEQ=min(UHIEQ)
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
MinUHIEQ=min(UHIEQ)
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
MinUHIEQ=min(UHIEQ)
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
MinUHIEQ=min(UHIEQ)
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
MinUHIEQ=min(UHIEQ)
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
MinUHIEQ=min(UHIEQ)
}
temp[1]
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
write.table (UHIEQ, file = temp[i], sep = ";", col.names = UHIEQ, append = TRUE, dec =",")
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
write.table (UHIEQ, file = temp[i], sep = ";", col.names = "UHIEQ", append = TRUE, dec =",")
}
warnings()
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
write.table (UHIEQ, file = temp[i], sep = ";", col.names = "UHIEQ", append = TRUE, dec =".")
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
FIN <- data.frame(temp[i], UHIEQ)
}
View(FIN)
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ)
}
View(FIN)
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ)
colnames(FIN) <- c("system:index", "UHI", "UHINIGHT", "nbhd_code", "UHIEQ")
}
View(delhi.csv)
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ)
colnames(FIN) <- c("system:index", "UHI", "UHINIGHT", "nbhd_code", "UHIEQ")
}
View(FIN)
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ)
colnames(FIN) <- c("system:index", "UHI", "UHINIGHT", "nbhd_code", "UHIEQ")
write.table (FIN, file = temp[i], dec =".")
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ)
colnames(FIN) <- c("system:index", "UHI", "UHINIGHT", "nbhd_code", "UHIEQ")
write.table (FIN, file = temp[i], sep = ";", dec =".")
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ)
colnames(FIN) <- c("system:index", "UHI", "UHINIGHT", "nbhd_code", "UHIEQ")
write.table (FIN, file = temp[i], sep = ",", dec =".")
}
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
Input_f <- assign(temp[i], read.csv(temp[i]))
UHICol <-Input_f[,2]
MinUHI=min(UHICol)
UHIEQ=UHICol+(-MinUHI)
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ)
colnames(FIN) <- c("system:index", "UHI", "UHINIGHT", "nbhd_code", "UHIEQ")
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
View(FIN)
#Set working directory
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,2]
#Find minimum value in column
MinUHI=min(UHICol)
#Normalize values in column such that the minimum UHI value of a city is zero
UHIEQ=UHICol+(-MinUHI)
#Create a 5 column dataframe with 4 columns of the original csv and the newly created vector
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ)
#Set the names of each column
colnames(FIN) <- c("system:index", "UHI", "UHINIGHT", "nbhd_code", "UHIEQ")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
#Set working directory
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,2]
#Find minimum value in column
MinUHI=min(UHICol)
#Normalize values in column such that the minimum UHI value of a city is zero
UHIEQ=UHICol+(-MinUHI)
#Create a 5 column dataframe with 4 columns of the original csv and the newly created vector
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ)
#Set the names of each column
colnames(FIN) <- c("system:index", "UHI", "UHINIGHT", "nbhd_code", "UHIEQ")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
#Set working directory
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,2]
#Find minimum value in column
MinUHI=min(UHICol)
#Normalize values in column such that the minimum UHI value of a city is zero
UHIEQ=UHICol+(-MinUHI)
#Create a 5 column dataframe with 4 columns of the original csv and the newly created vector
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ)
#Set the names of each column
colnames(FIN) <- c("system:index", "UHI", "UHINIGHT", "nbhd_code", "UHIEQ")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
#Set working directory
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,2]
#Find minimum value in column
MinUHI=min(UHICol)
#Normalize values in column such that the minimum UHI value of a city is zero
UHIEQ=UHICol+(-MinUHI)
#Create a 5 column dataframe with 4 columns of the original csv and the newly created vector
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ)
#Set the names of each column
colnames(FIN) <- c("system:index", "UHI", "UHINIGHT", "nbhd_code", "UHIEQ")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
#Set working directory
setwd("D:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,2]
#Find minimum value in column
MinUHI=min(UHICol)
#Normalize values in column such that the minimum UHI value of a city is zero
UHIEQ=UHICol+(-MinUHI)
#Create a 5 column dataframe with 4 columns of the original csv and the newly created vector
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ)
#Set the names of each column
colnames(FIN) <- c("system:index", "UHI", "UHINIGHT", "nbhd_code", "UHIEQ")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,2]
#Find minimum value in column
MinUHI=min(UHICol)
#Normalize values in column such that the minimum UHI value of a city is zero
UHIEQ=UHICol+(-MinUHI)
#Create a 5 column dataframe with 4 columns of the original csv and the newly created vector
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ)
#Set the names of each column
colnames(FIN) <- c("system:index", "UHI", "UHINIGHT", "nbhd_code", "UHIEQ")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/PM2.5/Yearly")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Extract file name as a string and remove extension
fname<-sub(pattern = "(.*)\\..*$", replacement = "\\1", basename(temp[i]))
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#x<-c(2, 4, 7, 9, 12, 14, 49, 52, 64)
#Input_f[x,]<-NULL
#Create a 4 column dataframe with the first 4 columns of the original csv
FIN <- data.frame(Input_f[,6],Input_f[,5])
#Set the names of each column
colnames(FIN) <- c("nbhd_code", fname)
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/PM2.5/Yearly")
#List all the csv files in directory
temp <- list.files(pattern="*.csv")
multmerge = function(path){
filenames=list.files(path=path, pattern="*.csv", full.names=TRUE)
rbindlist(lapply(filenames, function(x){read.csv(x, stringsAsFactors = F, sep=';')}))
}
mymergeddata <- multmerge("F:/Yale important/Other/Data driven yale/PM2.5/Yearly")
write.table(mymergeddata, file = "PM25TREND.csv", sep = ",", dec =".", row.names = F)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/PM2.5/Yearly")
multmerge = function(mypath){
filenames=list.files(path=mypath, pattern="*.csv", full.names=TRUE)
datalist = lapply(filenames, function(x){read.csv(file=x,header=T)})
Reduce(function(x,y) {merge(x,y)}, datalist)
}
mymergeddata <- multmerge("F:/Yale important/Other/Data driven yale/PM2.5/Yearly")
write.table(mymergeddata, file = "PM25TREND.csv", sep = ",", dec =".", row.names = F)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/PM2.5/Yearly")
temp <- list.files(pattern="*.csv")
#Skip to skip the number of rows from the top. Cannot be used if there is no data
All <- lapply(temp,function(i){
read.csv(i, header=TRUE, skip=1)
})
#Bind them together
df <- do.call(cbind.data.frame, All)
View(df)
write.table(df, file = "PM25TREND.csv", sep = ",", dec =".", row.names = F)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/PM2.5/Yearly")
temp <- list.files(pattern="*.csv")
#Skip to skip the number of rows from the top. Cannot be used if there is no data
All <- lapply(temp,function(i){
read.csv(i, header=FALSE, skip=1)
})
#Bind them together
df <- do.call(cbind.data.frame, All)
write.table(df, file = "PM25TREND.csv", sep = ",", dec =".", row.names = F)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/PM2.5/Yearly")
temp <- list.files(pattern="*.csv")
#Skip to skip the number of rows from the top. Cannot be used if there is no data
All <- lapply(temp,function(i){
read.csv(i, header=TRUE, skip=0)
})
#Bind them together
df <- do.call(cbind.data.frame, All)
write.table(df, file = "PM25TREND.csv", sep = ",", dec =".", row.names = F)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/PM2.5/Yearly")
temp <- list.files(pattern="*.csv")
#Skip to skip the number of rows from the top. Cannot be used if there is no data
All <- lapply(temp,function(i){
read.csv(i, header=TRUE, skip=0)
})
#Bind them together
df <- do.call(cbind.data.frame, All)
#Removing duplicate values
df<- unique( df )
write.table(df, file = "PM25TREND.csv", sep = ",", dec =".", row.names = F)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/PM2.5/Yearly")
temp <- list.files(pattern="*.csv")
#Skip to skip the number of rows from the top. Cannot be used if there is no data
All <- lapply(temp,function(i){
read.csv(i, header=TRUE, skip=0)
})
#Bind them together
df <- do.call(cbind.data.frame, All)
#Output
write.table(df, file = "PM25TREND.csv", sep = ",", dec =".", row.names = F)
