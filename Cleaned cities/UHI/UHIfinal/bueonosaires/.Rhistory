FIN <- data.frame(J,City_name)
FIN$mean=round(FIN$mean,1)
ggplot(FIN, aes(x=reorder(City_name,mean), y=mean, label=mean))+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.8,color = "blueviolet", size=1)+
geom_segment(aes(y = 0,
x = City_name,
yend = mean,
xend = City_name),
color = "deepskyblue3", alpha=(0)) +
geom_point(stat='identity', fill="green", color="firebrick", size=9) +
geom_text(color="white", size=4, fontface="bold") +
coord_flip()+ylab("Daytime UHI magnitude (°C)")+
xlab("City")+
ggtitle("Daytime UHI intensity of pilot cities")
library(Hmisc)
library(pastecs)
library(psych)
library(doBy)
library(lubridate)
library(tibble)
library(plyr)
library(tidyr)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp <- list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,5]
#Find data value in column
J<-describe(UHICol)
#Add city name to be added as a column
City_name<-sub(".csv", "", temp[i])
FIN <- data.frame(J,City_name)
}
FIN <- data.frame(J,City_name)
View(FIN)
library(Hmisc)
library(pastecs)
library(psych)
library(doBy)
library(lubridate)
library(tibble)
library(plyr)
library(tidyr)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp <- list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,5]
#Find data value in column
J<-describe(UHICol)
#Add city name to be added as a column
City_name<-sub(".csv", "", temp[i])
FIN <- data.frame(J,City_name)
}
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,5]
#Find data value in column
J[i,]<-describe(UHICol)
#Add city name to be added as a column
City_name[i]<-sub(".csv", "", temp[i])
}
#Create final dataset
FIN <- data.frame(J,City_name)
View(FIN)
FIN$mean=round(FIN$mean,1)
ggplot(FIN, aes(x=reorder(City_name,mean), y=mean, label=mean))+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.8,color = "blueviolet", size=1)+
geom_segment(aes(y = 0,
x = City_name,
yend = mean,
xend = City_name),
color = "deepskyblue3", alpha=(0)) +
geom_point(stat='identity', fill="green", color="firebrick", size=9) +
geom_text(color="white", size=4, fontface="bold") +
coord_flip()+ylab("Daytime UHI magnitude (°C)")+
xlab("City")+
ggtitle("Daytime UHI intensity of pilot cities")
library(Hmisc)
library(pastecs)
library(psych)
library(doBy)
library(lubridate)
library(tibble)
library(plyr)
library(tidyr)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp <- list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,6]
#Find data value in column
J<-describe(UHICol)
#Add city name to be added as a column
City_name<-sub(".csv", "", temp[i])
FIN <- data.frame(J,City_name)
}
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,6]
#Find data value in column
J[i,]<-describe(UHICol)
#Add city name to be added as a column
City_name[i]<-sub(".csv", "", temp[i])
}
#Create final dataset
FIN <- data.frame(J,City_name)
FIN$mean=round(FIN$mean,1)
ggplot(FIN, aes(x=reorder(City_name,mean), y=mean, label=mean))+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.8,color = "blueviolet", size=1)+
geom_segment(aes(y = 0,
x = City_name,
yend = mean,
xend = City_name),
color = "deepskyblue3", alpha=(0)) +
geom_point(stat='identity', fill="green", color="firebrick", size=9) +
geom_text(color="white", size=4, fontface="bold") +
coord_flip()+ylab("Daytime UHI magnitude (°C)")+
xlab("City")+
ggtitle("Daytime UHI intensity of pilot cities")
library(Hmisc)
library(pastecs)
library(psych)
library(doBy)
library(lubridate)
library(tibble)
library(plyr)
library(tidyr)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp <- list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,3]
#Find data value in column
J<-describe(UHICol)
#Add city name to be added as a column
City_name<-sub(".csv", "", temp[i])
FIN <- data.frame(J,City_name)
}
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,3]
#Find data value in column
J[i,]<-describe(UHICol)
#Add city name to be added as a column
City_name[i]<-sub(".csv", "", temp[i])
}
#Create final dataset
FIN <- data.frame(J,City_name)
FIN$mean=round(FIN$mean,1)
ggplot(FIN, aes(x=reorder(City_name,mean), y=mean, label=mean))+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.8,color = "blueviolet", size=1)+
geom_segment(aes(y = 0,
x = City_name,
yend = mean,
xend = City_name),
color = "deepskyblue3", alpha=(0)) +
geom_point(stat='identity', fill="green", color="firebrick", size=9) +
geom_text(color="white", size=4, fontface="bold") +
coord_flip()+ylab("Daytime UHI magnitude (°C)")+
xlab("City")+
ggtitle("Daytime UHI intensity of pilot cities")
library(Hmisc)
library(pastecs)
library(psych)
library(doBy)
library(lubridate)
library(tibble)
library(plyr)
library(tidyr)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
temp <- list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,6]
#Find data value in column
J<-describe(UHICol)
#Add city name to be added as a column
City_name<-sub(".csv", "", temp[i])
FIN <- data.frame(J,City_name)
}
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,6]
#Find data value in column
J[i,]<-describe(UHICol)
#Add city name to be added as a column
City_name[i]<-sub(".csv", "", temp[i])
}
#Create final dataset
FIN <- data.frame(J,City_name)
FIN$mean=round(FIN$mean,1)
ggplot(FIN, aes(x=reorder(City_name,mean), y=mean, label=mean))+
geom_errorbar(aes(ymin=mean-sd, ymax=mean+sd), width=.8,color = "blueviolet", size=1)+
geom_segment(aes(y = 0,
x = City_name,
yend = mean,
xend = City_name),
color = "deepskyblue3", alpha=(0)) +
geom_point(stat='identity', fill="green", color="firebrick", size=9) +
geom_text(color="white", size=4, fontface="bold") +
coord_flip()+ylab("Daytime UHI magnitude (°C)")+
xlab("City")+
ggtitle("Daytime UHI intensity of pilot cities")
library(openxlsx)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
NDVI=data.frame(read.xlsx("ndvi_all.xlsx"))
NDBI=data.frame(read.xlsx("ndbi_all.xlsx"))
DEM=data.frame(read.xlsx("DEM_all.xlsx"))
Albedo=data.frame(read.xlsx("Albedo_all.xlsx"))
NDBI=data.frame(read.xlsx("ndbi_all.xlsx"))
IMP=data.frame(read.xlsx("Impervious_surface.xlsx"))
library(openxlsx)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
Buffer=data.frame(read.xlsx("Buffer_UHI.xlsx"))
NDVI=data.frame(read.xlsx("ndvi_all.xlsx"))
NDBI=data.frame(read.xlsx("ndbi_all.xlsx"))
DEM=data.frame(read.xlsx("DEM_all.xlsx"))
Albedo=data.frame(read.xlsx("Albedo_all.xlsx"))
NDBI=data.frame(read.xlsx("ndbi_all.xlsx"))
IMP=data.frame(read.xlsx("Impervious_surface.xlsx"))
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
Merged =merge(Input_f,Buffer,by="nbhd_code")
Merged =merge(Merged,NDVI,by="nbhd_code")
Merged =merge(Merged,NDBI,by="nbhd_code")
Merged =merge(Merged,Albedo,by="nbhd_code")
Merged =merge(Merged,IMP,by="nbhd_code")
library(openxlsx)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
Buffer=data.frame(read.xlsx("Buffer_UHI.xlsx"))
NDVI=data.frame(read.xlsx("ndvi_all.xlsx"))
NDBI=data.frame(read.xlsx("ndbi_all.xlsx"))
DEM=data.frame(read.xlsx("DEM_all.xlsx"))
Albedo=data.frame(read.xlsx("Albedo_all.xlsx"))
NDBI=data.frame(read.xlsx("ndbi_all.xlsx"))
IMP=data.frame(read.xlsx("Impervious_surface.xlsx"))
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
Merged =merge(Input_f,Buffer,by="nbhd_code")
Merged =merge(Merged,NDVI,by="nbhd_code")
Merged =merge(Merged,NDBI,by="nbhd_code")
Merged =merge(Merged,Albedo,by="nbhd_code")
Merged =merge(Merged,IMP,by="nbhd_code")
Merged =merge(Merged,DEM,by="nbhd_code")
#Create a 5 column dataframe with 4 columns of the original csv and the newly created vector
FIN <- data.frame(Merged[,1],Merged[,2],Merged[,3],Merged[,4],Merged[,5],Merged[,8],Merged[,9],Merged[,10],Merged[,11],Merged[,12],Merged[,13])
#Set the names of each column
colnames(FIN) <- c("nbhd_code","system:index", "UHI", "UHINIGHT",  "UHIEQ","Buffer_UHI","NDVI","NDBI","Albedo","Impervious_surface","DEM")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
library(openxlsx)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
Buffer=data.frame(read.xlsx("Buffer_UHI.xlsx"))
NDVI=data.frame(read.xlsx("ndvi_all.xlsx"))
NDBI=data.frame(read.xlsx("ndbi_all.xlsx"))
DEM=data.frame(read.xlsx("DEM_all.xlsx"))
Albedo=data.frame(read.xlsx("Albedo_all.xlsx"))
NDBI=data.frame(read.xlsx("ndbi_all.xlsx"))
IMP=data.frame(read.xlsx("Impervious_surface.xlsx"))
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
Merged =merge(Input_f,Buffer,by="nbhd_code")
Merged =merge(Merged,NDVI,by="nbhd_code")
Merged =merge(Merged,NDBI,by="nbhd_code")
Merged =merge(Merged,Albedo,by="nbhd_code")
Merged =merge(Merged,IMP,by="nbhd_code")
Merged =merge(Merged,DEM,by="nbhd_code")
#Create a 5 column dataframe with 4 columns of the original csv and the newly created vector
FIN <- data.frame(Merged[,1],Merged[,2],Merged[,3],Merged[,4],Merged[,5],Merged[,9],Merged[,10],Merged[,11],Merged[,12],Merged[,13],Merged[,14])
#Set the names of each column
colnames(FIN) <- c("nbhd_code","system:index", "UHI", "UHINIGHT",  "UHIEQ","Buffer_UHI","NDVI","NDBI","Albedo","Impervious_surface","DEM")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
library(openxlsx)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
Buffer=data.frame(read.xlsx("Buffer_UHI.xlsx"))
NDVI=data.frame(read.xlsx("ndvi_all.xlsx"))
NDBI=data.frame(read.xlsx("ndbi_all.xlsx"))
DEM=data.frame(read.xlsx("DEM_all.xlsx"))
Albedo=data.frame(read.xlsx("Albedo_all.xlsx"))
NDBI=data.frame(read.xlsx("ndbi_all.xlsx"))
IMP=data.frame(read.xlsx("Impervious_surface.xlsx"))
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
Merged =merge(Input_f,Buffer,by="nbhd_code")
Merged =merge(Merged,NDVI,by="nbhd_code")
Merged =merge(Merged,NDBI,by="nbhd_code")
Merged =merge(Merged,Albedo,by="nbhd_code")
Merged =merge(Merged,IMP,by="nbhd_code")
Merged =merge(Merged,DEM,by="nbhd_code")
#Create a 5 column dataframe with 4 columns of the original csv and the newly created vector
FIN <- data.frame(Merged[,1],Merged[,2],Merged[,3],Merged[,4],Merged[,5],Merged[,9],Merged[,10],Merged[,11],Merged[,12],Merged[,13],Merged[,14])
#Set the names of each column
colnames(FIN) <- c("nbhd_code","system:index", "UHI", "UHINIGHT",  "UHIEQ","Buffer_UHI","NDVI","NDBI","Albedo","Impervious_surface","DEM")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
library(openxlsx)
#Set working directory
setwd("E:/Disk backup/Pen drive/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
#Buffer=data.frame(read.xlsx("Buffer_UHI.xlsx"))
Count=data.frame(read.xlsx("Cities_urbanLST_count.xlsx"))
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
#Merged =merge(Input_f,Buffer,by="nbhd_code")
Merged =merge(Input_f,Count,by="nbhd_code")
#Create a 5 column dataframe with 4 columns of the original csv and the newly created vector
FIN <- data.frame(Merged[,1],Merged[,2],Merged[,3],Merged[,4],Merged[,5],Merged[,6],Merged[,7],Merged[,8],Merged[,9],Merged[,10],Merged[,11],Merged[,12])
#Set the names of each column
colnames(FIN) <- c("nbhd_code","system:index", "UHI", "UHINIGHT",  "UHIEQ","Buffer_UHI","NDVI","NDBI","Albedo","Impervious_surface","DEM","Count")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
#Set working directory
setwd("E:/Disk backup/Pen drive/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Replace by NA if count is zero
Input_f[ Input_f[ ,12] == 0 , 3] <- NA
Input_f[ Input_f[ ,12] == 0 , 4] <- NA
FIN<-dat.frame(Input_f)
colnames(FIN) <- c("nbhd_code","system:index", "UHI", "UHINIGHT",  "UHIEQ","Buffer_UHI","NDVI","NDBI","Albedo","Impervious_surface","DEM","Count")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
#Set working directory
setwd("E:/Disk backup/Pen drive/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Replace by NA if count is zero
Input_f[ Input_f[ ,12] == 0 , 3] <- NA
Input_f[ Input_f[ ,12] == 0 , 4] <- NA
FIN<-data.frame(Input_f)
colnames(FIN) <- c("nbhd_code","system:index", "UHI", "UHINIGHT",  "UHIEQ","Buffer_UHI","NDVI","NDBI","Albedo","Impervious_surface","DEM","Count")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
#Set working directory
setwd("E:/Disk backup/Pen drive/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,3]
#Find minimum value in column
MinUHI=min(UHICol)
#Normalize values in column such that the minimum UHI value of a city is zero
UHIEQ=UHICol+(-MinUHI)
#Create a 5 column dataframe with 4 columns of the original csv and the newly created vector
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ,Input_f[,6],Input_f[,7],Input_f[,8],Input_f[,9],Input_f[,10],Input_f[,11],Input_f[,12])
#Set the names of each column
colnames(FIN) <- c("nbhd_code","system:index", "UHI", "UHINIGHT",  "UHIEQ","Buffer_UHI","NDVI","NDBI","Albedo","Impervious_surface","DEM","Count")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
#Set working directory
setwd("E:/Disk backup/Pen drive/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,3]
#Find minimum value in column
MinUHI=min(UHICol)
#Normalize values in column such that the minimum UHI value of a city is zero
UHIEQ=UHICol+(-MinUHI)
#Create a 5 column dataframe with 4 columns of the original csv and the newly created vector
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ,Input_f[,6],Input_f[,7],Input_f[,8],Input_f[,9],Input_f[,10],Input_f[,11],Input_f[,12])
#Set the names of each column
colnames(FIN) <- c("nbhd_code","system:index", "UHI", "UHINIGHT",  "UHIEQ","Buffer_UHI","NDVI","NDBI","Albedo","Impervious_surface","DEM","Count")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
#Set working directory
setwd("E:/Disk backup/Pen drive/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,3]
#Find minimum value in column
MinUHI=min(UHICol,na.rm = FALSE)
#Normalize values in column such that the minimum UHI value of a city is zero
UHIEQ=UHICol+(-MinUHI)
#Create a 5 column dataframe with 4 columns of the original csv and the newly created vector
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ,Input_f[,6],Input_f[,7],Input_f[,8],Input_f[,9],Input_f[,10],Input_f[,11],Input_f[,12])
#Set the names of each column
colnames(FIN) <- c("nbhd_code","system:index", "UHI", "UHINIGHT",  "UHIEQ","Buffer_UHI","NDVI","NDBI","Albedo","Impervious_surface","DEM","Count")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
#Set working directory
setwd("E:/Disk backup/Pen drive/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,3]
#Find minimum value in column
MinUHI=min(UHICol,na.rm = FALSE)
#Normalize values in column such that the minimum UHI value of a city is zero
UHIEQ=UHICol+(-MinUHI)
#Create a 5 column dataframe with 4 columns of the original csv and the newly created vector
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ,Input_f[,6],Input_f[,7],Input_f[,8],Input_f[,9],Input_f[,10],Input_f[,11],Input_f[,12])
#Set the names of each column
colnames(FIN) <- c("nbhd_code","system:index", "UHI", "UHINIGHT",  "UHIEQ","Buffer_UHI","NDVI","NDBI","Albedo","Impervious_surface","DEM","Count")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
#Set working directory
setwd("E:/Disk backup/Pen drive/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
#Create a variable for the UHI column in the csv
UHICol <-Input_f[,3]
#Find minimum value in column
MinUHI=min(UHICol,na.rm = TRUE)
#Normalize values in column such that the minimum UHI value of a city is zero
UHIEQ=UHICol+(-MinUHI)
#Create a 5 column dataframe with 4 columns of the original csv and the newly created vector
FIN <- data.frame(Input_f[,1],Input_f[,2],Input_f[,3],Input_f[,4], UHIEQ,Input_f[,6],Input_f[,7],Input_f[,8],Input_f[,9],Input_f[,10],Input_f[,11],Input_f[,12])
#Set the names of each column
colnames(FIN) <- c("nbhd_code","system:index", "UHI", "UHINIGHT",  "UHIEQ","Buffer_UHI","NDVI","NDBI","Albedo","Impervious_surface","DEM","Count")
#Give the file the same names as the oiriginal input csv and overwrite it in the working directory
write.table (FIN, file = temp[i], sep = ",", dec =".",row.names = F)
}
library(openxlsx)
#Set working directory
setwd("F:/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal")
#List all the csv files in directory
temp = list.files(pattern="*.csv")
p <- par(mfrow=c(2,2))
for (i in 1:length(temp)){
#Assign the csv file to a variable
Input_f <- assign(temp[i], read.csv(temp[i]))
plot(Input_f[,8],Input_f[,10])
}
plot(Input_f[,8],Input_f[,10])
par(p)
source('E:/Disk backup/Pen drive/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal/bueonosaires/Cleandata.R', echo=TRUE)
source('E:/Disk backup/Pen drive/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal/bueonosaires/Cleandata.R', echo=TRUE)
source('E:/Disk backup/Pen drive/Yale important/Other/Data driven yale/Cleaned cities/UHI/UHIfinal/bueonosaires/Cleandata.R', echo=TRUE)
